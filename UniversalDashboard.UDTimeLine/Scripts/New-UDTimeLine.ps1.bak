<#
.SYNOPSIS
    Sample control for UniversalDashboard.
.DESCRIPTION
    Sample control function for UniversalDashboard. This function must have an ID and return a hash table.
.PARAMETER Id
    An id for the component default value will be generated by new-guid.
.EXAMPLE
    PS C:\> <example usage>
    Explanation of what the example does
.INPUTS
    Inputs (if any)
.OUTPUTS
    Output (if any)
.NOTES
    General notes
#>
function New-UDTimeLine {
    param(
        [Parameter()]
        [string]$Id = (New-Guid).ToString(),
        [Parameter()]
        [string]$width = "100%",
        [Parameter()]
        [string]$height = "400px",
        [Parameter()]
        [scriptblock]$data,
        [Parameter()]
        [bool]$showRowLabels = $true,
        [Parameter()]
        [bool]$showRowNumber = $false,
        [Parameter()]
        [bool]$groupByRowLabel = $false,
        [Parameter()]
        [bool]$colorByRowLabel = $true,
        [Parameter()]
        [string]$backgroundColor = "#ffd",
        [Parameter()]
        [array]$colors = @('#95a3b3', '#f7f06d', '#fe5f55'),
        [Parameter()]
        [string]$fontName = "Garamond",
        [Parameter()]
        [int]$fontSize = 20,
        [Parameter()]
        [string]$fontColor = "#000"
    )

    End {
        [System.Collections.ArrayList]$MainData = @()
        foreach ($Item in [array]$Data.Invoke()) {
            [System.Collections.ArrayList]$ItemData = @(
                $Item.RowLabel
                #https://developers.google.com/chart/interactive/docs/datesandtimes#dates-and-times-using-the-date-string-representation
                #Important: When using this Date String Representation, as when using the new Date() constructor, months are indexed starting at zero (January is month 0, December is month 11).
                "Date($($Item.Start.Year), $($Item.Start.Month - 1), $($Item.Start.Day))"
                "Date($($Item.End.Year), $($Item.End.Month - 1), $($Item.End.Day))"

            )
            $MainData.Add($ItemData) | Out-Null
        }
        @{
            # The AssetID of the main JS File
            assetId         = $AssetId
            # Tell UD this is a plugin
            isPlugin        = $true
            # This ID must be the same as the one used in the JavaScript to register the control with UD
            type            = "UD-TimeLine"
            # An ID is mandatory
            id              = $Id

            # This is where you can put any other properties. They are passed to the React control's props
            # The keys are case-sensitive in JS.
            width           = $width
            height          = $height
            data            = $MainData
            showRowLabels   = $showRowLabels
            showRowNumber   = $showRowNumber
            groupByRowLabel = $groupByRowLabel
            colorByRowLabel = $colorByRowLabel
            backgroundColor = $backgroundColor
            colors          = $colors
            color           = $fontColor
            fontName        = $fontName
            fontSize        = $fontSize
        }

    }
}
